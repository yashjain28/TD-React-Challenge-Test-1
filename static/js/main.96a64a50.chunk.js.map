{"version":3,"sources":["App.js","index.js"],"names":["createGroups","data","arr","replace","split","i","console","log","array","t","m","length","Math","floor","random","shuffle","result","size","j","k","concat","push","counter","finalArr","Object","keys","sort","forEach","key","element","join","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","pug","event","transformedData","target","value","setState","defineProperty","name","pugged","react_default","a","createElement","react","className","rows","cols","onChange","bind","readOnly","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.96a64a50.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\n\nfunction shuffle(array) {\n  var m = array.length;\n  var t, i;\n\n  // While there remain elements to shuffle…\n  while (m) {\n    // Pick a remaining element…\n    i = Math.floor(Math.random() * m--);\n\n    // And swap it with the current element.\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n\nfunction createGroups(data) {\n  var arr = data.replace(/[\\r\\n]+/g, \"\\n\").split(\"\\n\");\n\n  for (const i in arr) {\n    console.log(arr[i]);\n  }\n  shuffle(arr);\n  console.log(arr);\n  let result = {};\n  let size = arr.length;\n  for (let j = 0, k = 1; j < size; j++, k++) {\n    if (!result[arr[j]]) {\n      result[arr[j]] = {};\n    }\n    result[arr[j]][\"reviews\"] = [];\n\n    const t = [arr[k % size], arr[(k + 1) % size], arr[(k + 2) % size]];\n    result[arr[j]][\"reviews\"] = result[arr[j]][\"reviews\"].concat(t);\n    for (let i = 0; i < 3; i++) {\n      if (!result[arr[(k + i) % size]]) {\n        result[arr[(k + i) % size]] = {};\n      }\n      if (!result[arr[(k + i) % size]][\"reviewed_by\"]) {\n        result[arr[(k + i) % size]][\"reviewed_by\"] = [];\n      }\n      result[arr[(k + i) % size]][\"reviewed_by\"].push(arr[j]);\n    }\n  }\n\n  console.log(result);\n  let counter = 1;\n  var finalArr = [];\n  Object.keys(result)\n    .sort()\n    .forEach(function(key) {\n      finalArr.push(counter + \". \" + key + \" reviews: \");\n      counter++;\n      //finalArr.push(\"--------\\n\");\n      result[key][\"reviews\"].forEach((element) =>\n        finalArr.push(\"| \" + element + \" |\")\n      );\n      finalArr.push(\"\\nLooks for reviews from : \");\n      //finalArr.push(\"--------\\n\");\n      result[key][\"reviewed_by\"].forEach((element) =>\n        finalArr.push(\"| \" + element + \" |\")\n      );\n\n      finalArr.push(\"\\n-- -- -- -- -- -- -- -- -- --\\n\\n\");\n    });\n  console.log(finalArr);\n  return finalArr.join(\"\");\n}\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      text: `\n      output shown here\n      `\n    };\n    this.pug = 'enter names here';\n  }\n\n  \n\n  onChange(event) {\n    const transformedData = createGroups(event.target.value); \n    this.pug = event.target.value\n    \n    this.setState({\n      [event.target.name]: transformedData,\n    });\n  }\n  \n  render() {\n    const  pugged  = this.pug;\n    const { text } = this.state;\n    return (\n      <Fragment>\n        <div className=\"work-area\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <h2 className=\"editable\">Input (editable field)</h2>\n                <textarea rows=\"30\" cols=\"60\" onChange={this.onChange.bind(this)} name=\"text\" value={pugged} />\n              </div>\n              <div className=\"col-md-6\">\n                <h2 className=\"non-editable\">Output</h2>\n                <textarea rows=\"30\" cols=\"60\" readOnly value={text} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap-theme.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}